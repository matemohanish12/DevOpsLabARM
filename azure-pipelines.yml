name: $(Date:yyyMMdd)$(Rev:.r)
trigger:
  batch: false # batch changes if true (the default); start a new build for every push if false
  branches:
    include: [ main ] # branch names which will trigger a build
variables:
  servicePrincipal: http://AbelDeployPrincipal
  servicePrincipalTenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
  azureSubscriptionName: ca-abewan-demo-test
  resourceGroupName: abellearndbrg4
  location: southcentralus
  startip: 0.0.0.0
  endip: 0.0.0.0
  dbName: learndb
  dbEdition: GeneralPurpose
  dbFamily: Gen4
  dbCapacity: 1
  dbZoneRedundant: false
  webAppSku: S1
  partnerServerLocation: westus2
  node2Location: westus
  storageAccountSku: Standard_LRS
  
stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'windows-latest'

    steps:

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
        
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'Deploy'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: ProvisionDevInfra
#   jobs:
#   - deployment: ProvisionDevInfra
#     displayName: Provision Dev Infra Web and DB
#     pool:
#       name: Hosted Windows 2019 with VS2019
#     variables:
#       adminlogin: abel
#       servername: abellearndbserverdev1
#       webAppName: abellearndbwebappdev1
#       failoverName: learndbserverfailoverdev1
#       partnerServerName: learndbserver2dev1
#       trafficManagerProfileName: abellearndbtmdev1
#       uniqueDNSName: abellearndbuniquedev1
#       storageAccountName: abellearndbstoragedev1
#     environment: 'courses-dev-provisionInfra'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: drop
#             patterns: '**/*'

#           - task: PowerShell@2
#             displayName : 'Provision DB and Web'
#             inputs:
#               filePath: '$(Pipeline.Workspace)/drop/IaC/provisionWebDB.ps1'
#               arguments: '-servicePrincipal $(servicePrincipal) -servicePrincipalSecret $(servicePrincipalSecret) -servicePrincipalTenantId $(servicePrincipalTenantId) -azureSubscriptionName "$(azureSubscriptionName)" -resourceGroupName $(resourceGroupName) -location $(location) -adminlogin $(adminlogin) -adminPassword $(adminPasswordDev) -servername $(servername) -startip $(startip) -endip $(endip) -dbName $(dbName) -dbEdition $(dbEdition) -dbFamily $(dbFamily) -dbCapacity $(dbCapacity) -dbZoneRedundant $(dbZoneRedundant) -webAppName $(webAppName) -webAppSku $(webAppSku) -releaseDirectory $(Pipeline.Workspace) -failoverName $(failoverName) -partnerServerName $(partnerServerName) -partnerServerLocation $(partnerServerLocation) -trafficManagerProfileName $(trafficManagerProfileName) -uniqueDNSName $(uniqueDNSName) -node2Location $(node2Location) -storageAccountName $(storageAccountName) -storageAccountSku $(storageAccountSku)'

#           - task: AzurePowerShell@4
#             displayName: 'Configure Environment with PowerShell'
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               ScriptType: 'FilePath'
#               ScriptPath: '$(Pipeline.Workspace)/drop/IaC/configureWithPS.ps1'
#               ScriptArguments: '-resourceGroupName $(resourceGroupName) -servername $(servername) -dbName $(dbName) -servicePrincipalSecret $(servicePrincipalSecret) -servicePrincipal $(servicePrincipal) -servicePrincipalTenantId $(servicePrincipalTenantId)'
#               azurePowerShellVersion: 'LatestVersion'
          
# - stage: DBAVerificationDev
#   jobs:
#   - deployment: DBAVerificationDev
#     displayName: DBA Verify DB Deployment Script to Dev
#     pool:
#       name: Hosted Windows 2019 with VS2019
#     variables:
#       adminlogin: abel
#       servername: abellearndbserverdev1
#     environment: 'courses-dev-dbaverification'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: drop
#             patterns: '**/*'
          
#           - task: SqlAzureDacpacDeployment@1
#             displayName: Run Update DB Script from DBA
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               AuthenticationType: 'server'
#               ServerName: '$(servername).database.windows.net'
#               DatabaseName: '$(dbName)'
#               SqlUsername: '$(adminlogin)'
#               SqlPassword: '$(adminPasswordDev)'
#               deployType: 'SqlTask'
#               SqlFile: '$(Pipeline.Workspace)/drop/data/UpdateDB.sql'
#               IpDetectionMethod: 'AutoDetect'

#           - task: SqlAzureDacpacDeployment@1
#             displayName: Generate Auto Gen DB Update Script
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               AuthenticationType: 'server'
#               ServerName: '$(servername).database.windows.net'
#               DatabaseName: '$(dbName)'
#               SqlUsername: '$(adminlogin)'
#               SqlPassword: '$(adminPasswordDev)'
#               deployType: 'DacpacTask'
#               DeploymentAction: 'Script'
#               DacpacFile: '$(Pipeline.Workspace)/drop/Database/bin/Debug/Database.dacpac'
#               IpDetectionMethod: 'AutoDetect'
          
#           - task: PowerShell@2
#             displayName: Show Auto Generated SQL Script
#             inputs:
#               targetType: 'inline'
#               script: |
#                 # Write your PowerShell commands here.
                
#                 Write-Host "Auto Generated SQL Update Script:"
                
#                 Get-Content d:\a\1\s\GeneratedOutputFiles\learndb_Script.sql | foreach {Write-Output $_}
              
# - stage: DeployToDev
#   jobs:
#   - deployment: DeployInfraWebDB
#     displayName: Deploy Web and DB
#     pool:
#       name: Hosted Windows 2019 with VS2019
#     variables:
#       adminlogin: abel
#       servername: abellearndbserverdev1
#       webAppName: abellearndbwebappdev1
#     environment: 'courses-dev'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: drop
#             patterns: '**/*'

#           - task: AzureRmWebAppDeployment@4
#             displayName: "Deploy Node 1"
#             inputs:
#               ConnectionType: 'AzureRM'
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               appType: 'webApp'
#               WebAppName: '$(webAppName)'
#               packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

#           - task: AzureRmWebAppDeployment@4
#             displayName: 'Deploy Node 2'
#             inputs:
#               ConnectionType: 'AzureRM'
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               appType: 'webApp'
#               WebAppName: '$(webAppName)2'
#               packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

#           - task: SqlAzureDacpacDeployment@1
#             displayName: 'Deploy SQL Schema'
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               AuthenticationType: 'server'
#               ServerName: '$(servername).database.windows.net'
#               DatabaseName: '$(dbName)'
#               SqlUsername: '$(adminlogin)'
#               SqlPassword: '$(adminPasswordDev)'
#               deployType: 'DacpacTask'
#               DeploymentAction: 'Publish'
#               DacpacFile: '$(Pipeline.Workspace)/drop/Database/bin/Debug/Database.dacpac'
#               IpDetectionMethod: 'AutoDetect'

# - stage: ProvisionProdInfra
#   jobs:
#   - deployment: ProvisionProdInfra
#     displayName: Provision Prod Infra Web and DB
#     pool:
#       name: Hosted Windows 2019 with VS2019
#     variables:
#       adminlogin: abel
#       servername: abellearndbserverprod1
#       webAppName: abellearndbwebappprod1
#       failoverName: learndbserverfailoverprod1
#       partnerServerName: learndbserver2prod1
#       trafficManagerProfileName: abellearndbtmprod1
#       uniqueDNSName: abellearndbuniqueprod1
#       storageAccountName: abellearndbstorageprod1
#     environment: 'courses-prod-provisionInfra'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: drop
#             patterns: '**/*'

#           - task: PowerShell@2
#             displayName : 'Provision DB and Web'
#             inputs:
#               filePath: '$(Pipeline.Workspace)/drop/IaC/provisionWebDB.ps1'
#               arguments: '-servicePrincipal $(servicePrincipal) -servicePrincipalSecret $(servicePrincipalSecret) -servicePrincipalTenantId $(servicePrincipalTenantId) -azureSubscriptionName "$(azureSubscriptionName)" -resourceGroupName $(resourceGroupName) -location $(location) -adminlogin $(adminlogin) -adminPassword $(adminPasswordDev) -servername $(servername) -startip $(startip) -endip $(endip) -dbName $(dbName) -dbEdition $(dbEdition) -dbFamily $(dbFamily) -dbCapacity $(dbCapacity) -dbZoneRedundant $(dbZoneRedundant) -webAppName $(webAppName) -webAppSku $(webAppSku) -releaseDirectory $(Pipeline.Workspace) -failoverName $(failoverName) -partnerServerName $(partnerServerName) -partnerServerLocation $(partnerServerLocation) -trafficManagerProfileName $(trafficManagerProfileName) -uniqueDNSName $(uniqueDNSName) -node2Location $(node2Location) -storageAccountName $(storageAccountName) -storageAccountSku $(storageAccountSku)'

#           - task: AzurePowerShell@4
#             displayName: 'Configure Environment with PowerShell'
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               ScriptType: 'FilePath'
#               ScriptPath: '$(Pipeline.Workspace)/drop/IaC/configureWithPS.ps1'
#               ScriptArguments: '-resourceGroupName $(resourceGroupName) -servername $(servername) -dbName $(dbName) -servicePrincipalSecret $(servicePrincipalSecret) -servicePrincipal $(servicePrincipal) -servicePrincipalTenantId $(servicePrincipalTenantId)'
#               azurePowerShellVersion: 'LatestVersion'
          
# - stage: DBAVerificationProd
#   jobs:
#   - deployment: DBAVerificationProd
#     displayName: DDBA Verify DB Deployment Script to Prod
#     pool:
#       name: Hosted Windows 2019 with VS2019
#     variables:
#       adminlogin: abel
#       servername: abellearndbserverprod1
#     environment: 'courses-prod-dbaverification'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: drop
#             patterns: '**/*'
          
#           - task: SqlAzureDacpacDeployment@1
#             displayName: Run Update DB Script from DBA
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               AuthenticationType: 'server'
#               ServerName: '$(servername).database.windows.net'
#               DatabaseName: '$(dbName)'
#               SqlUsername: '$(adminlogin)'
#               SqlPassword: '$(adminPasswordDev)'
#               deployType: 'SqlTask'
#               SqlFile: '$(Pipeline.Workspace)/drop/data/UpdateDB.sql'
#               IpDetectionMethod: 'AutoDetect'
          
#           - task: SqlAzureDacpacDeployment@1
#             displayName: Generate Auto Gen DB Update Script
#             inputs:
#               azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
#               AuthenticationType: 'server'
#               ServerName: '$(servername).database.windows.net'
#               DatabaseName: '$(dbName)'
#               SqlUsername: '$(adminlogin)'
#               SqlPassword: '$(adminPasswordProd)'
#               deployType: 'DacpacTask'
#               DeploymentAction: 'Script'
#               DacpacFile: '$(Pipeline.Workspace)/drop/Database/bin/Debug/Database.dacpac'
#               IpDetectionMethod: 'AutoDetect'
          
#           - task: PowerShell@2
#             displayName: Show SQL Generated Script
#             inputs:
#               targetType: 'inline'
#               script: |
#                 # Write your PowerShell commands here.
                
#                 Write-Host "Auto Generated SQL Update Script:"
                
#                 Get-Content d:\a\1\s\GeneratedOutputFiles\learndb_Script.sql | foreach {Write-Output $_}

# - stage: DeployToProd
  jobs:
  - deployment: DeployWebDB
    displayName: Deploy Web and DB
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverprod1
      webAppName: abellearndbwebappprod1
    environment: 'courses-prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Node 1'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
              appType: 'webApp'
              WebAppName: '$(webAppName)'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Node 2'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
              appType: 'webApp'
              WebAppName: '$(webAppName)2'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

          - task: SqlAzureDacpacDeployment@1
            displayName: 'Deploy SQL Schema'
            inputs:
              azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
              AuthenticationType: 'server'
              ServerName: '$(servername).database.windows.net'
              DatabaseName: '$(dbName)'
              SqlUsername: '$(adminlogin)'
              SqlPassword: '$(adminPasswordProd)'
              deployType: 'DacpacTask'
              DeploymentAction: 'Publish'
              DacpacFile: '$(Pipeline.Workspace)/drop/Database/bin/Debug/Database.dacpac'
              IpDetectionMethod: 'AutoDetect'          